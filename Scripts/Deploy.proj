<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Deploy" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" ToolsVersion="15.8">
  <ImportGroup Label="PropertySheets">
    <Import Project="..\Source\common_settings.props" />
  </ImportGroup>

  <!-- Variables (override in user_settings.props) -->
  <PropertyGroup>
     <!-- Default build type - release -->
     <BuildConfiguration Condition="'$(BuildConfiguration)' == ''">Release</BuildConfiguration>

    <!-- Project root folder -->
    <ProjectRoot Condition="'$(ProjectRoot)' == ''">$([System.IO.Path]::GetFullPath($(MODDIR)))</ProjectRoot>

    <!-- Release Folder -->
    <!-- To change the output folder, use the following parameter: /p:ReleaseDir=C:\KSP\Mods\Releases\ShipManifest -->
    <ReleaseDir Condition="'$(ReleaseDir)' == ''">$(ProjectRoot)\Release</ReleaseDir>

    <!-- BuildDir Folder -->
    <!-- This is the folder where the distribution will be built -->
    <BuildDir>$(ReleaseDir)\Build</BuildDir>

    <!-- SourceDir Folder -->
    <!-- This is the folder which contains the solution and source files -->
    <SourceDir>$(ProjectRoot)\Source</SourceDir>

    <!-- DistDir Folder -->
    <!-- This is the folder where the static distribution files are kept -->
    <DistDir Condition="'$(DistDir)'==''">$(ProjectRoot)\Distribution</DistDir>

    <!-- SM_Build Folder -->
    <!-- This is the folder where the ShipManifest project outputs its build artefacts -->
    <SM_BuildDir>$(SourceDir)\$(MODNAME)\bin</SM_BuildDir>

    <!-- SMI_Build Folder -->
    <!-- This is the folder where the SMInterface project outputs its build artefacts -->
    <SMI_BuildDir>$(SourceDir)\SMInterface\bin</SMI_BuildDir>
  </PropertyGroup>

  <!-- All top-level projects -->
  <Target Name="ALL"
          DependsOnTargets="Deploy;Release">
  </Target>

  <!-- "Autostart" This target deploys the build artefacts to the KSP Directory. -->
  <Target Name="Deploy">
    <CallTarget Targets="Compile"/>
    <CallTarget Targets="DoDeploy"/>
  </Target>

  <!-- This target builds the release archive. -->
  <Target Name="Release">
    <CallTarget Targets="Compile"/>
    <CallTarget Targets="MakeRelease"/>
    <CallTarget Targets="ZipRelease"/>
  </Target>

  <!-- compile solution as release -->
  <Target Name="Compile">
    <MSBuild Projects="$(SourceDir)\$(MODNAME).sln"
      Targets="Clean;Build"
      Properties="Configuration=$(BuildConfiguration)"/>
  </Target>

  <Target Name="BuildDir">
    <MakeDir Directories="$(BuildDir)" Condition="!Exists('$(BuildDir)')" />
  </Target>

  <!-- This target deploys the build artefacts to the KSP directory -->
  <Target Name="DoDeploy"
          DependsOnTargets="GenerateVersionFile">
    <PropertyGroup>
      <SourceFolder>$(DistDir)\GameData\$(MODNAME)</SourceFolder>
      <DestFolder>$(KSPDIR)\GameData\$(MODNAME)</DestFolder>
    </PropertyGroup>

    <MakeDir Directories="$(DestFolder)" Condition="!Exists('$(DestFolder)')" />
    <ItemGroup>
      <ReleaseFiles
        Include="$(SourceFolder)\**\*.*"
        Exclude="">
      </ReleaseFiles>
    </ItemGroup>
    <Copy
      SourceFiles="@(ReleaseFiles)"
      DestinationFolder="$(DestFolder)\%(RecursiveDir)"
      SkipUnchangedFiles="true" >
      <Output TaskParameter="CopiedFiles" ItemName="Copied" />
    </Copy>
    <ItemGroup>
      <OutdatedFiles Include="$(DestFolder)\**" Exclude="@(Copied)" />
    </ItemGroup>
    <Delete Files="@(OutdatedFiles)"/>
    <ItemGroup>
      <ReleaseFiles Remove="@(ReleaseFiles)" />
      <OutdatedFiles Remove="@(OutdatedFiles)" />
    </ItemGroup>
  </Target>

  <!-- This target builds the release package -->
  <Target Name="MakeRelease"
          DependsOnTargets="BuildDir">
    <!-- Copy main mod files -->
    <ItemGroup>
      <DistFiles
        Include="$(DistDir)\**\*.*"
        Exclude="*.pdb">
      </DistFiles>
    </ItemGroup>
    <Copy
      SourceFiles="@(DistFiles)"
      DestinationFolder="$(BuildDir)\%(RecursiveDir)"
      SkipUnchangedFiles="true" >
      <Output TaskParameter="CopiedFiles" ItemName="Copied" />
    </Copy>
    <ItemGroup>
      <OutdatedFiles Include="$(BuildDir)\**" Exclude="@(Copied)" />
    </ItemGroup>
    <Delete Files="@(OutdatedFiles)"/>

    <!-- Copy dev files -->
    <MakeDir Directories="$(BuildDir)\Dev" Condition="!Exists('$(BuildDir)\Dev')" />
    <Copy
      SourceFiles="$(SMI_BuildDir)\$(BuildConfiguration)\SMInterface.dll"
      DestinationFolder="$(BuildDir)\Dev" />

    <!-- Copy static text files -->
    <Copy
      SourceFiles="$(ProjectRoot)\License.txt;$(ProjectRoot)\CONTRIBUTORS.md"
      DestinationFolder="$(BuildDir)\" />

    <!-- Generate templated files -->
    <CallTarget Targets="GenerateVersionFile"/>
    <CallTarget Targets="GenerateChangelog"/>

    <ItemGroup>
      <DistFiles Remove="@(DistFiles)" />
      <OutdatedFiles Remove="@(OutdatedFiles)" />
    </ItemGroup>
  </Target>

  <!-- create zip file with content of release\bin folder -->
  <Target Name="ZipRelease"
          DependsOnTargets="getversion;gettime">
    <MakeDir Directories="$(ReleaseDir)" Condition="!Exists('$(ReleaseDir)')" />
    <!-- Remove existing ZIPs for same version -->
    <ItemGroup>
      <OutdatedFiles Include="$(ReleaseDir)\$(MODNAME)-$(DLLVersion)*.zip" />
    </ItemGroup>
    <Delete Files="@(OutdatedFiles)"/>

    <!-- Create ZIP from build directory -->
    <ZipDirectory Condition="Exists('$(BuildDir)')"
                  SourceDirectory="$(BuildDir)"
                  DestinationFile="$(ReleaseDir)\$(MODNAME)-$(DLLVersion)_$(CurrentDate).zip" />
    <ItemGroup>
      <OutdatedFiles Remove="@(OutdatedFiles)" />
    </ItemGroup>
  </Target>

  <Target Name="gettime">
    <PropertyGroup>
      <CurrentDate>$([System.DateTime]::Now.ToString(yyyyMMddHHmmss))</CurrentDate>
    </PropertyGroup>
    <Message Text="CurrentDate = $(CurrentDate)" Importance="high" />
  </Target>

  <Target Name="getversion"
          DependsOnTargets="Compile">
    <Error Text="Can not find $(MODNAME).dll in '$(SM_BuildDir)\$(BuildConfiguration)'"
           Condition="!Exists('$(SM_BuildDir)\$(BuildConfiguration)\$(MODNAME).dll')" />
      <GetAssemblyIdentity AssemblyFiles="$(SM_BuildDir)\$(BuildConfiguration)\$(MODNAME).dll">
          <Output TaskParameter="Assemblies" ItemName="myAssemblyInfo"/>
      </GetAssemblyIdentity>
      <PropertyGroup>
          <DLLVersion>%(myAssemblyInfo.Version)</DLLVersion>
      </PropertyGroup>
  </Target>

  <UsingTask TaskName="GrepInFile"  TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll">
    <ParameterGroup>
      <Path ParameterType="System.String" Required="true" />
      <Expression ParameterType="System.String" Required="true" />
      <Value ParameterType="System.String" Output="true" />
    </ParameterGroup>
    <Task>
      <Using Namespace="System.Text.RegularExpressions" />
      <Code Type="Fragment" Language="cs"><![CDATA[
      //Console.WriteLine("Searching in file " + Path);
      //Console.WriteLine("Search expression is " + Expression);
      var re = new Regex(Expression);
      foreach(var line in File.ReadLines(Path))
      {
        var match = re.Match(line);
        if(match.Success)
        {
          Value = match.Groups[1].Value;
          //Console.WriteLine("KSP Version found - {0}!", Value);
          break;
        }
      }
]]></Code>
    </Task>
  </UsingTask>

  <Target Name="getkspversion">
    <Error Text="Can not find KSP readme.txt in '$(KSPDIR)'"
           Condition="!Exists('$(KSPDIR)\readme.txt')" />
    <GrepInFile Path="$(KSPDIR)\readme.txt" Expression="Version\s+(\d+\.\d+(\.\d+)?)\s*">
      <Output PropertyName="KSPVersion" TaskParameter="Value" />
    </GrepInFile>
    <Message Text="KSP Version is $(KSPVersion)" Importance="High" />
  </Target>

  <UsingTask  TaskName="ReplaceTagsInFile"
              TaskFactory="CodeTaskFactory"
              AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll">
    <ParameterGroup>
      <TemplateFile ParameterType="System.String" Required="true" />
      <TargetFile ParameterType="System.String" Required="true" />
      <Tokens ParameterType="Microsoft.Build.Framework.ITaskItem[]" Required="true" />
    </ParameterGroup>
    <Task>
      <Using Namespace="System.Text.RegularExpressions" />
      <Code Type="Fragment" Language="cs"><![CDATA[
      var tokens = new Dictionary<string,string>();
      foreach(var item in Tokens) {
        tokens.Add(item.ItemSpec, item.GetMetadata("Value"));
      }
      string template = File.ReadAllText(TemplateFile);
      string content = Regex.Replace(template, @"\{[A-Z0-9_]+\}", match => tokens[match.Value]);
      File.WriteAllText(TargetFile, content);
]]></Code>
    </Task>
  </UsingTask>

  <Target Name="GenerateChangelog"
          Inputs="$(ProjectRoot)\CHANGELOG.md"
          Outputs="$(BuildDir)\CHANGELOG.md"
          DependsOnTargets="getversion;getkspversion;BuildDir">
    <PropertyGroup>
      <uc_Date>$([System.DateTime]::Now.ToString(dd MMM yyyy))</uc_Date>
    </PropertyGroup>
    <ItemGroup>
      <Tokens Include="{VERSION}"><Value>$(DLLVersion)</Value></Tokens>
      <Tokens Include="{KSPVERSION}"><Value>$(KSPVersion)</Value></Tokens>
      <Tokens Include="{DATE}"><Value>$(uc_Date)</Value></Tokens>
    </ItemGroup>
    <ReplaceTagsInFile
        TemplateFile="$(ProjectRoot)\CHANGELOG.md"
        TargetFile="$(BuildDir)\CHANGELOG.md"
        Tokens="@(Tokens)" />
    <ItemGroup>
      <Tokens Remove="@(Tokens)" />
    </ItemGroup>
  </Target>

  <Target Name="GenerateVersionFile"
          Inputs="Version.template;$(SM_BuildDir)\$(BuildConfiguration)\$(MODNAME).dll"
          Outputs="$(DistDir)\GameData\$(MODNAME)\$(MODNAME).version"
          DependsOnTargets="Compile;getversion;getkspversion">
    <ItemGroup>
      <Tokens Include="{MAJOR}"><Value>$([System.Version]::Parse($(DLLVersion)).Major.ToString())</Value></Tokens>
      <Tokens Include="{MINOR}"><Value>$([System.Version]::Parse($(DLLVersion)).Minor.ToString())</Value></Tokens>
      <Tokens Include="{PATCH}"><Value>$([System.Version]::Parse($(DLLVersion)).Build.ToString())</Value></Tokens>
      <Tokens Include="{BUILD}"><Value>$([System.Version]::Parse($(DLLVersion)).Revision.ToString())</Value></Tokens>
      <Tokens Include="{KSP_MAJOR}"><Value>$([System.Version]::Parse($(KSPVersion)).Major.ToString())</Value></Tokens>
      <Tokens Include="{KSP_MINOR}"><Value>$([System.Version]::Parse($(KSPVersion)).Minor.ToString())</Value></Tokens>
      <Tokens Include="{KSP_PATCH}"><Value>$([System.Version]::Parse($(KSPVersion)).Build.ToString())</Value></Tokens>
    </ItemGroup>
    <ReplaceTagsInFile
        TemplateFile="Version.template"
        TargetFile="$(DistDir)\GameData\$(MODNAME)\$(MODNAME).version"
        Tokens="@(Tokens)" />
    <ItemGroup>
      <Tokens Remove="@(Tokens)" />
    </ItemGroup>
  </Target>

  <!-- Sets up debug configuration; can't be inside "Deploy-DEBUG" due to a limitation of MSBuild -->
  <Target Name="SetDebugConfiguration">
    <CreateProperty Value="Debug">
      <Output TaskParameter="Value" PropertyName="BuildConfiguration"/>
    </CreateProperty>
  </Target>

  <!-- Builds and deploys the debug version of DPAI -->
  <Target Name="Deploy-DEBUG">
    <CallTarget Targets="SetDebugConfiguration"/>
    <CallTarget Targets="Compile"/>
    <CallTarget Targets="DoDeploy"/>
    <CallTarget Targets="DoDeploy-DEBUG"/>
  </Target>

  <!-- This target deploys the debug-build artefacts over the top of the standard artifacts in the KSP directory -->
  <Target Name="DoDeploy-DEBUG">
    <PropertyGroup>
      <SourceFolder>$(SM_BuildDir)\$(BuildConfiguration)</SourceFolder>
      <DestFolder>$(KSPDIR)\GameData\$(MODNAME)\Plugins</DestFolder>
    </PropertyGroup>
    <MakeDir Directories="$(DestFolder)" Condition="!Exists('$(DestFolder)')" />
    <ItemGroup>
      <ReleaseFiles
        Include="$(SourceFolder)\*.*"
        Exclude="">
      </ReleaseFiles>
    </ItemGroup>
    <Copy
      SourceFiles="@(ReleaseFiles)"
      DestinationFolder="$(DestFolder)\"
      SkipUnchangedFiles="true" >
    </Copy>
    <ItemGroup>
      <ReleaseFiles Remove="@(ReleaseFiles)" />
    </ItemGroup>
  </Target>

</Project>
